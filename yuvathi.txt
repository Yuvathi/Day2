1.Find the sum of first 10 natural numbers.

public class Main
{
	public static void main(String[] args) {
		int i, num = 10, sum = 0;  
        for(i = 1; i <= num; ++i){  
            sum = sum + i;  
    }  
    System.out.println("Sum of First 10 Natural Numbers is = " + sum); 
	}
}

2.Display n terms of natural number and their sum.

import java.io.*;
class Main {
    public static void main(String[] args)
    {
        int N = 10;
        int sum = 0;
        System.out.print("First " + N + " Numbers = ");
        for (int i = 1; i <= N; i++) {
            System.out.print(i + " ");
            sum += i;
        }
        System.out.println();
        System.out.println("Sum of first " + N
                           + " Natural Number = " + sum);
    }
}

3.Display the cube of the number upto given an integer

import java.util.Scanner;
public class Main {

   public static void main(String[] args)

{
    int i,n;
    System.out.print("Input number of terms : ");
    Scanner in = new Scanner(System.in);
     n = in.nextInt();
     for(i=1;i<=n;i++)
     {
     System.out.println("Number is : " +i+" and cube of " +i+" is : "+(i*i*i));     
    }
 }
}


4.Display the n terms of odd natural number and their sum.

import java.util.Scanner;
public class Main {
   public static void main(String[] args)
{
   int i,n,sum=0;
   System.out.println("Input number of terms is: ");
{
   Scanner in = new Scanner(System.in);
   n = in.nextInt();
  System.out.println ("\nThe odd numbers are :");
   for(i=1;i<=n;i++){
     System.out.println (2*i-1);
     sum+=2*i-1;
   }
   System.out.println ("The Sum of odd Natural Number upto " +n+" terms is: " +sum);
}
}
}

5. Display the n terms of square natural number and their sum

import java.io.*;

class Main{
    public static void main(String args[]){
    int sum = 0,n;
   System.out.println("Input number of terms is: ");
   Scanner in = new Scanner(System.in);
   n = in.nextInt();
    for (int i = 1; i <= n; i++)
      sum += (i * i);
    System.out.println("Sum=" + sum);
  }
}

6. program to check whether a given number is a perfect number or not.

import java.util.Scanner;  
public class Main  
{  
public static void main(String args[])    
{  
int n, sum=0;  
Scanner sc=new Scanner(System.in);         
System.out.print("Enter the number: ");  
n=sc.nextInt();  
int i=1;  
while(i <= n/2)  
{  
if(n % i == 0)  
{  
sum = sum + i;  
} 
i++;  
}  
if(sum==n)  
{  
System.out.println(n+" is a perfect number.");  
}  
else  
System.out.println(n+" is not a perfect number.");   
}  
} 

7. program to find the perfect numbers within a given number of range

public class Main{
public static void main(String[] args)  {
    int num, sum = 0;
    int i;
    for (num = 1; num < 50; num++) {
        for (int j = 1; j <= num - 1; j++) {   
            if (num % j == 0) {
                sum = sum + j;
            }
        }
        if (sum == num) {
            System.out.println( sum);
        }
        sum = 0;                            
    }

}
}

8.program to check whether a given number is an armstrong number or not

import java.util.Scanner;
public class Main {
   public static void main(String args[]) {
      int number = 153;
      int check, rem, sum = 0;
      System.out.println("Enter the number to be verified:");
      Scanner sc = new Scanner(System.in);
      number = sc.nextInt();
      check = number;
      while(check != 0) {
         rem = check % 10;
         sum = sum + (rem * rem * rem);
         check = check / 10;
      }
      if(sum == number)
         System.out.println("Given number is an armstrong number.");
      else
         System.out.println("Given number is not an armstrong number.");
   }
}

9. display the first n terms of Fibonacci series.

public class Main {
  public static void main(String[] args) {

    int n = 10, firstnum = 0, secondnum = 1;
    System.out.println("Fibonacci Series for " + n + " numbers:");

    for (int i = 1; i <= n; ++i) {
      System.out.print(firstnum + ", ");

      int nextnum = firstnum + secondnum;
      firstnum = secondnum;
      secondnum = nextnum;
    }
  }
}

10.check whether a number is a palindrome or not

class Main{  
 public static void main(String args[]){  
  int r,sum=0,temp;    
  System.out.println("Enter the number to be verified:");
    Scanner sc = new Scanner(System.in);
      n = sc.nextInt(); 
  temp=n;    
  while(n>0){    
   r=n%10;   
   sum=(sum*10)+r;    
   n=n/10;    
  }    
  if(temp==sum)    
   System.out.println("palindrome number ");    
  else    
   System.out.println("not palindrome");    
}  
}  

11. program to find HCF (Highest Common Factor) of two numbers
import java.util.Scanner;
public class Main {
   public static void main(String args[]){
      int a, b, i, hcf = 0;
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter first number :: ");
      a = sc.nextInt();
      System.out.println("Enter second number :: ");
      b = sc.nextInt();

      for(i = 1; i <= a || i <= b; i++) {
         if( a%i == 0 && b%i == 0 )
         hcf = i;
      }
      System.out.println("HCF of given two numbers is ::"+hcf);
   }
}

12.find LCM of any two numbers using HCF.
public class Main  
{  
public static void main(String args[])   
{  
int gcd = 1;  
int a, b;      
Scanner sc = new Scanner(System.in);    
System.out.print("Enter the first number: ");    
a = sc.nextInt();    
System.out.print("Enter the second number: ");   
b = sc.nextInt();    
for(int i = 1; i <= a && i <= b; ++i)   
{  
  
if(a % i == 0 && b % i == 0)  

gcd = i;  
}  
  
int lcm = (a * b) / gcd;  

System.out.printf("The LCM of %d and %d is %d.", a, b, lcm);  
}  
}  
 
